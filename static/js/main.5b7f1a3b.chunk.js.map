{"version":3,"sources":["img/vs.png","components/Navbar.jsx","api/Api.jsx","components/MyCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","AppBar","position","color","Toolbar","IconButton","Typography","variant","API_KEY","MyCard","match","useState","detail","setDatail","open","setOpen","showDetailBtnClicked","id","url","fetch","then","response","json","catch","error","console","log","getMatchDetail","data","handleClickOpen","handleClose","type","Card","style","background","matchStarted","marginTop","CardContent","Grid","container","justify","alignItems","spacing","item","width","src","require","alt","CardActions","Button","onClick","marginLeft","Date","dateTimeGMT","toLocaleString","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","stat","fontStyle","fontWeight","score","DialogActions","autoFocus","App","matches","setMatches","useEffect","getMatches","className","align","Container","xs","map","Fragment","unique_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b7f1a3b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vs.dbdf7904.png\";","import React, { Component } from \"react\";\r\nimport { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <AppBar position=\"static\" color=\"secondary\">\r\n      <Toolbar>\r\n        <IconButton color=\"inherit\">\r\n          <MenuIcon></MenuIcon>\r\n        </IconButton>\r\n        <Typography variant=\"h6\">Live Score</Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const API_KEY = \"9c2zqsVBkIVUsyyZE1uniGqcvUJ3\";\r\n\r\n// Get all the matches [upcoming matches]\r\n\r\nexport const getMatches = () => {\r\n  const url = `https://cricapi.com/api/matches/?apikey=${API_KEY}`;\r\n\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .catch((error) => console.log(\"ERROR : \", error));\r\n};\r\n\r\n//get the score of the cuurent match\r\n\r\nexport const getMatchDetail = (id) => {\r\n  const url = `https://cricapi.com/api/cricketScore?unique_id=${id}&apikey=${API_KEY}`;\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .catch((error) => console.log(error));\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { getMatchDetail } from \"../api/Api\";\r\n\r\nconst MyCard = ({ match }) => {\r\n  const [detail, setDatail] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getMatchCard = () => (\r\n    <div>\r\n      <Card\r\n        style={{\r\n          background: match.matchStarted ? \"#e2e2e2\" : \"\",\r\n          marginTop: 15,\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={4}>\r\n            <Grid item>\r\n              <Typography variant=\"h5\">{match[\"team-1\"]}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <img\r\n                style={{ width: 85 }}\r\n                src={require(\"../img/vs.png\")}\r\n                alt=\"\"\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h5\">{match[\"team-2\"]}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Grid container justify=\"center\">\r\n            <Button\r\n              onClick={() => {\r\n                showDetailBtnClicked(match[\"unique_id\"]);\r\n              }}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n            >\r\n              Show Detail\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: 5 }}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Starting time {new Date(match.dateTimeGMT).toLocaleString()}\r\n            </Button>\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n\r\n  const showDetailBtnClicked = (id) => {\r\n    getMatchDetail(id)\r\n      .then((data) => {\r\n        console.log(data);\r\n        setDatail(data);\r\n        handleClickOpen();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {match.type == \"Twenty20\" ? getMatchCard() : \"\"}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Match Detail...\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Typography>{detail.stat}</Typography>\r\n            <Typography>\r\n              Match\r\n              <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\r\n                {detail.matchStarted ? \"Started\" : \"Still not started\"}\r\n              </span>\r\n            </Typography>\r\n            <Typography>\r\n              Score\r\n              <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\r\n                {\" \"}\r\n                {detail.score}\r\n              </span>\r\n            </Typography>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyCard;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\"; \nimport MyCard from \"./components/MyCard\";\nimport { getMatches } from \"./api/Api\";\nimport { Container, Grid, Typography } from \"@material-ui/core\";\nfunction App() {\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    getMatches()\n      .then((data) => {\n        console.log(data.matches);\n        setMatches(data.matches);\n      })\n      .catch((error) => {});\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Typography variant=\"h3\" align=\"center\" style={{marginTop:20}}>Welcome to my Live Score APP</Typography>\n      <Container>\n        <Grid container>\n          <Grid item xs={12}>\n            {matches.map((match) => (\n              <React.Fragment>\n              {\n                match.type==\"Twenty20\"?(<MyCard key={match.unique_id} match={match}/>):(\"\")\n              }\n              </React.Fragment>\n            ))}\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}